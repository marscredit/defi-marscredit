{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jeremycrane/Repositories/defi-marscredit/src/lib/web3.ts"],"sourcesContent":["import { http, createConfig } from 'wagmi'\nimport { defineChain } from 'viem'\nimport { metaMask, injected } from 'wagmi/connectors'\n\n// Mars Credit Network Chain Configuration\nexport const marsCreditNetwork = defineChain({\n  id: 110110,\n  name: 'Mars Credit Network',\n  network: 'marscredit',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MARS',\n    symbol: 'MARS',\n  },\n  rpcUrls: {\n    public: { http: ['https://rpc.marscredit.xyz'] },\n    default: { http: ['https://rpc.marscredit.xyz'] },\n  },\n  blockExplorers: {\n    default: { name: 'Mars Credit Explorer', url: 'https://blockscan.marscredit.xyz' },\n  },\n})\n\n// Simple wagmi config with client-safe connectors\nexport const config = createConfig({\n  chains: [marsCreditNetwork],\n  connectors: [\n    metaMask(),\n    injected(), // For Zerion and other injected wallets\n    // Note: WalletConnect removed temporarily to fix SSR issues\n    // Will add back with proper client-side only initialization\n  ],\n  transports: {\n    [marsCreditNetwork.id]: http(),\n  },\n})\n\nexport default config "],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AACA;AAAA;;;;AAGO,MAAM,oBAAoB,CAAA,GAAA,gKAAA,CAAA,cAAW,AAAD,EAAE;IAC3C,IAAI;IACJ,MAAM;IACN,SAAS;IACT,gBAAgB;QACd,UAAU;QACV,MAAM;QACN,QAAQ;IACV;IACA,SAAS;QACP,QAAQ;YAAE,MAAM;gBAAC;aAA6B;QAAC;QAC/C,SAAS;YAAE,MAAM;gBAAC;aAA6B;QAAC;IAClD;IACA,gBAAgB;QACd,SAAS;YAAE,MAAM;YAAwB,KAAK;QAAmC;IACnF;AACF;AAGO,MAAM,SAAS,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;IACjC,QAAQ;QAAC;KAAkB;IAC3B,YAAY;QACV,CAAA,GAAA,mKAAA,CAAA,WAAQ,AAAD;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAGR;IACD,YAAY;QACV,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAA,GAAA,gKAAA,CAAA,OAAI,AAAD;IAC7B;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/jeremycrane/Repositories/defi-marscredit/src/components/Web3Provider.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { WagmiProvider } from 'wagmi'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { config } from '@/lib/web3'\n\n// Setup queryClient\nconst queryClient = new QueryClient()\n\nexport function Web3Provider({ children }: { children: React.ReactNode }) {\n  return (\n    <WagmiProvider config={config}>\n      <QueryClientProvider client={queryClient}>\n        {children}\n      </QueryClientProvider>\n    </WagmiProvider>\n  )\n} "],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AACA;AALA;;;;;AAOA,oBAAoB;AACpB,MAAM,cAAc,IAAI,gLAAA,CAAA,cAAW;AAE5B,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,qBACE,6LAAC,kJAAA,CAAA,gBAAa;QAAC,QAAQ,qHAAA,CAAA,SAAM;kBAC3B,cAAA,6LAAC,yLAAA,CAAA,sBAAmB;YAAC,QAAQ;sBAC1B;;;;;;;;;;;AAIT;KARgB","debugId":null}}]
}